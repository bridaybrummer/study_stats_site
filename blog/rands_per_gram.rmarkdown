---
title: "Rands per gram for sports"
excerpt: "A look at common sports nutrition gels cost"
date: "2025-08-02"
categories: [Blog, Sport, Cycling, nutrition]
format:
    html:
        css: 
        - ../styles.css  # optional custom styling for posts
        - bibliography-styles.css  # Enhanced bibliography styling
        resources:
        - shinylive-sw.js
        - bibliography-interactions.js
        include-after-body: bibliography-include.html
        toc: true
        toc-depth: 3
        toc-location: left
        citations-hover: true
        footnotes-hover: true
        smooth-scroll: true
        link-external-newwindow: true
filters:
  - shinylive
height: 10000
echo: false
bibliography: rand_per_gram.bib
csl: https://www.zotero.org/styles/apa-6th-edition
cite-method: citeproc
reference-location: margin
citation-location: margin
---

# Introduction
This post is a look at the cost of sports nutrition in South Africa, specifically looking at the cost per gram of carbohydrates. The goal is to provide a quick reference for athletes and cyclists to make informed decisions about their nutrition choices based on cost-effectiveness. While sports nutrition products do offer other things like caffeine, "electrolytes" in various forms, we felt that the cost and grams of carbohydrate are the first things to consider when planning trainig and racing.

# Methodology
We used chatbots to scrape prices from websites and include the website the price was taken from so that each price was then checked. We collected claimed product weight and carbohydrate contents from the nutrition label and the price from the website to calculate the rands per gram. We divided products into four categories: gels, bars, drink mixes, and everyday foods for real-life comparisons.


```{r}
#| include: false

library(NMCleaner)
conflicted::conflicts_prefer(dplyr::filter)


# data
library(tibble)

all_products <- tribble(
    ~Product, ~Brand, ~Price_ZAR, ~Serving_Size, ~Carbs_per_Serving, ~Source_Link,

    # Maurten
    "Maurten Gel 100", "Maurten", 74.99, "40 g gel", 25, "https://www.cyclelab.com/maurten-gel-100-energy-gel",
    "Maurten Gel 100 CAF 100", "Maurten", 84.55, "40 g gel", 25, "https://www.cyclelab.com/maurten-gel-100-caf-100",
    "Maurten Gel 160", "Maurten", 104.99, "65 g gel", 40, "https://www.cyclelab.com/maurten-gel-160",
    "Maurten Solid 160 Bar", "Maurten", 69.99, "55 g bar", 40, "https://www.cyclelab.com/maurten-solid-160-energy-bar",
    "Maurten Solid C 160 Bar", "Maurten", 69.99, "55 g bar", 40, "https://www.cyclelab.com/maurten-solid-c160-energy-bar",

    # Cadence
    "Cadence CarboFuel Energy Bar (Salted Caramel)", "Cadence", 34.99, "45 g bar", 40, "https://www.cadencenutrition.com/products/carbofuel-energy-salt-caramel-bar",
    "Cadence Balanced Energy Bar (Apple Pie)", "Cadence", 39.99, "45 g bar", 20, "https://www.cadencenutrition.com/products/balanced-energy-bar-apple-pie",
    "Cadence CarboFuel Gel (Various flavours)", "Cadence", 35.99, "36 g gel", 21.3, "https://www.cadencenutrition.com/collections/classic-energy-gels/products/cadence-nutrition-classic-energy-gel-vanilla",

    # Biogen
    "Biogen Real Fruit Energy Gel (Various Flavours)", "Biogen", 24.99, "36 g gel", 22, "https://www.cyclelab.com/biogen-real-fruit-energy-gel-tropical",
    "Biogen Liquid Energy (Various flavours)", "Biogen", 27.99, "60 ml gel", 24, "https://biogen.co.za/product-category/sports-nutrition/",

    # PowerBar
    "PowerBar PowerGel", "PowerBar", 49.99, "41 g gel", 25, "https://www.cyclelab.com/powerbar-powergel-mango",
    "PowerBar PowerGel Hydro", "PowerBar", 73.00, "67 ml gel", 25, "https://www.archcycles.co.za/products/powerbar-powergel-hydro-cola-67ml",
    "PowerBar RaceFuel", "PowerBar", 44.990, "55 g bar", 37, "https://finishlinecycles.co.za/products/powerbar-energize-55g",

    # USN
    "USN Vooma Ultra Gel", "USN", 21.99, "36 g gel", 25, "https://www.dischem.co.za/usn-vooma-ultra-energy-gel-36g",
    "USN Cramp Block Iso Gel", "USN", 24.90, "60 g gel", 40, "https://za.usn.global/products/cramp-block-iso-gel",

    # NAMEDSport
    "NAMEDSport Total Energy Fruit Bar", "NAMEDSport", 39.90, "35 g bar", 23, "https://solomonscycles.co.za/product/named-sport-total-energy-fruit-bar-assorted-35g/",
    "NAMEDsport RaceFuel Gel", "NAMEDSport", 60, "60 ml gel", 40, "",
    "NAMEDSport Isotonic Gel", "NAMEDSport", 55, "60 ml gel", 22, "https://xciter.co.za/products/isotonic-power-gel-singles?variant=48451031826616&country=ZA&currency=ZAR&utm_medium=product_sync&utm_source=google&utm_content=sag_organic&utm_campaign=sag_organic&gad_source=1&gad_campaignid=20982968793&gbraid=0AAAAAC_BkNd_3ig26aiBkyg4y-Q5s7iNv&gclid=Cj0KCQjwj8jDBhD1ARIsACRV2TthMXMTIXnh6kyx6e75i-4oHwkkYzqPTlAHv-MsDzQOJfl-MiAxuhwaAiNZEALw_wcB",

    # 226ERS
    "226ERS High Energy Gel", "226ERS", 95.99, "76 g gel", 50, "https://226ers.co.za/products/high-energy-gel-76g-energy-gel",
    "226ERS High Fructose Gel", "226ERS", 92.99, "80 g gel", 55, "https://226ers.co.za/products/high-fructose-gel-energy-gel-80g",

    # STYRKR
    "STYRKR GEL30", "STYRKR", 85.00, "45 g gel", 30, "https://vivovitasport.com/product-category/styrkr/",
    "STYRKR GEL50", "STYRKR", 95.00, "60 g gel", 50, "https://vivovitasport.com/product-category/styrkr/",
    "STYRKR BAR50", "STYRKR", 85.00, "65 g bar", 50, "https://vivovitasport.com/product-category/styrkr/",

    # AMACx
    "AMACx Turbo Gel", "AMACx", 60.00, "60 ml gel", 40, "https://gearchange.co.za/products/nutrition-amacx-turbo-gel",

    # SiS
    "SiS GO Isotonic Energy Gel", "SiS", 44.00, "60 ml gel", 22, "https://scienceinsport.co.za/go-isotonic-energy-gel-60ml-single-unit-pineapple",
    "SiS GO Energy + Electrolyte Gel", "SiS", 59.00, "60 ml gel", 22, "https://scienceinsport.co.za/sis-go-energy-electrolyte-gel-60ml-single-unit-lemon-mint",
    "SiS GO Energy + Caffeine Gel (75 mg)", "SiS", 67.00, "60 ml gel", 22, "https://scienceinsport.co.za/caffeine-gels",
    "SiS Beta Fuel Dual‑Source Energy Gel", "SiS", 74.00, "60 ml gel", 40, "https://scienceinsport.co.za/nutrition-energy-beta-fuel-nutrition-energy-beta-fuel-beta-fuel-60ml-single-unit-orange",
    "SiS Beta Fuel + Nootropics Gel", "SiS", 80.00, "60 ml gel", 40, "https://scienceinsport.co.za/sis-nutrition-energy-beta-fuel-60ml-nootropics-gel-single-unit-lemon-lime",

    # GU Energy
    "GU Energy Gel", "GU Energy", 74.90, "32 g gel", NA, "https://guenergy.co.za/energy-gel",

    # PVM
    "PVM Energy Bar", "PVM", 20, "45 g bar", 26, "https://pvm.co.za/shop/",
    "PVM Gel (caf and uncaf)", "PVM", 35, "35 g gel", 22.3, "https://pvm.co.za/product/octane-gel/?attribute_single-or-box-of-20-gels=Single&attribute_pa_flavour=chocolate-100mg-caffeine&gad_source=1&gad_campaignid=19628545607&gbraid=0AAAAAoLuU1PWWvJoaZr3KKd2ojBrCPLDM&gclid=Cj0KCQjwj8jDBhD1ARIsACRV2TsQqIrgkrusDou6uQMyv50J6B9hdZllb3j2y4A5oSFEfUaMp64793IaAlm6EALw_wcB#nutritional",
    "PVM Octane Gel (35g)", "PVM", 35.00, "35 g gel", 22.3, "https://pvm.co.za/product/octane-gel",
    "PVM Octane XTR Gel (35g)", "PVM", 45.00, "35 g gel", 24, "https://pvm.co.za/product/octane-xtr-gel",



    # Precision Fuel from carbon endurance
    "Precision Fuel 30g Gel", "Precision Fuel", 62.00, "30 g gel", 30, "https://www.carbonendurance.co/precision-hydration-3",
    "Precision Fuel 30g Caffeinated Gel", "Precision Fuel", 72.00, "30 g gel", 30, "https://www.carbonendurance.co/precision-hydration-3",
    "Precision Fuel 90g Gel Pouch", "Precision Fuel", 159.00, "90 g gel pouch", 90, "https://www.carbonendurance.co/precision-hydration-3",
    # "Fuel 300 Flow Gel (pouch)", "Precision Fuel", 549.00, "300 g pouch", 300, "https://www.carbonendurance.co/precision-hydration-3",

    # 32GI
    "32Gi Sports Gel (27 g single)", "32Gi", 28.00, "27 g gel", 21, "https://www.thesweatshop.co.za/products/32gi-sports-gel-27g",
    "32Gi Race Pro 300 Gel", "32Gi", 99.99, "100 g gel", 67, "https://32gi.co.za/products/race-pro-300-calorie-energy-gel",
    "32Gi Race Pro Energy Bar (25 g)", "32Gi", 16.95, "25 g bar", 19, "https://www.thesweatshop.co.za/products/32gi-race-pro-bar-25g",

    # Hammer
    "Hammer Gel Single (33 g)", "Hammer Nutrition", 40.00, "33 g gel", 21, "https://durbanrunner.co.za/products/hammer-gel-chocolate-single",
    "Hammer Gel Box 26‑serving Jug", "Hammer Nutrition", 580.00 / 26, "33 g gel", 21, "https://durbanrunner.co.za/collections/hammer",

    # SiSu Nutrition gels
    "SiSu 2Hr Fuel Cell (120 g pouch)", "SiSu Nutrition", 60.00, "120 g gel", 75, "https://sisunutrition.co.za/?product=sisu-2hr-fuel-cell-120-g",

    # Gu energy
    "GU Energy Gel (32 g sachet)", "GU", 37.99, "32 g gel", 22, "https://www.dischem.co.za/gu-energy-gel-112", # R 37.99 :contentReference[oaicite:1]{index=1}
    "GU Roctane Energy Gel (32 g)", "GU", 61.99, "32 g gel", 22, "https://www.dischem.co.za/gu-roctane-energy-gel-32g", # R 61.99 :contentReference[oaicite:2]{index=2}

    # Everyday South African Foods
    "Albany White Bread (2 slices @ R20 for 20 slices)", "Groceries", 2, "80 g", 35, "https://www.albany.co.za/Products/everyday-bread/Everyday-White-Bread",
    "Woolworths Bananas (1 banana from pack of 6 @ R32)", "Groceries", 5.33, "40 g", 31, "https://www.fatsecret.co.za/calories-nutrition/search?q=Banana",
    "Huletts White Sugar", "Groceries", 4.99, "50 g granules", 50, "https://www.fatsecret.co.za/calories-nutrition/search?q=Huletts+White+Sugar",
    "Kellogg's Corn Flakes (50g @ R50 for box)", "Groceries", 5.00, "50 g", 42, "https://www.pnp.co.za/kellogg-s-corn-flakes-500g"
)
all_products %>% nrow()

# this one includes drink mixes aswell
all_products <- tribble(
    ~Product, ~Brand, ~Price_ZAR, ~Serving_Size, ~Carbs_per_Serving, ~Source_Link,

    # Maurten
    "Maurten Gel 100", "Maurten", 74.99, "40 g gel", 25, "https://www.cyclelab.com/maurten-gel-100-energy-gel",
    "Maurten Gel 100 CAF 100", "Maurten", 84.55, "40 g gel", 25, "https://www.cyclelab.com/maurten-gel-100-caf-100",
    "Maurten Gel 160", "Maurten", 104.99, "65 g gel", 40, "https://www.cyclelab.com/maurten-gel-160",
    "Maurten Solid 160 Bar", "Maurten", 69.99, "55 g bar", 40, "https://www.cyclelab.com/maurten-solid-160-energy-bar",
    "Maurten Solid C 160 Bar", "Maurten", 69.99, "55 g bar", 40, "https://www.cyclelab.com/maurten-solid-c160-energy-bar",
    "Maurten Drink Mix 160", "Maurten", 50.00, "40 g sachet", 40, "https://maurten.co.za/catalogue/maurten-drinkmix-160/", # Price incl. VAT, contains 40 g carbs per 500 ml:contentReference[oaicite:0]{index=0}
    "Maurten Drink Mix 320", "Maurten", 75.00, "80 g sachet", 80, "https://maurten.co.za/catalogue/maurten-drinkmix-320/", # Price incl. VAT, contains 80 g carbs per 500 ml:contentReference[oaicite:1]{index=1}
    "Maurten Drink Mix 320 CAF 100", "Maurten", 82.00, "80 g sachet", 80, "https://maurten.co.za/catalogue/sachet-maurten-drink-mix-320-caf/", # Price incl. VAT, 80 g carbs + 100 mg caffeine:contentReference[oaicite:2]{index=2}

    # Cadence
    "Cadence CarboFuel Energy Bar (Salted Caramel)", "Cadence", 34.99, "45 g bar", 40, "https://www.cadencenutrition.com/products/carbofuel-energy-salt-caramel-bar",
    "Cadence Balanced Energy Bar (Apple Pie)", "Cadence", 39.99, "45 g bar", 20, "https://www.cadencenutrition.com/products/balanced-energy-bar-apple-pie",
    "Cadence CarboFuel Gel (Various flavours)", "Cadence", 35.99, "36 g gel", 21.3, "https://www.cadencenutrition.com/collections/classic-energy-gels/products/cadence-nutrition-classic-energy-gel-vanilla",
    # Cadence (1 kg pack, 88 g carbs per 100 g → 880 g total)
    "Cadence CarboFuel Energy (Red Berry)", "Cadence", 399.99, "1 kg pack", 880,
    "https://www.cadencenutrition.com/products/cadence-nutrition-carbofuel-red-berry-doypack",

    # Biogen
    "Biogen Real Fruit Energy Gel (Various Flavours)", "Biogen", 24.99, "36 g gel", 22, "https://www.cyclelab.com/biogen-real-fruit-energy-gel-tropical",
    "Biogen Liquid Energy (Various flavours)", "Biogen", 27.99, "60 ml gel", 24, "https://biogen.co.za/product-category/sports-nutrition/",

    # PowerBar
    "PowerBar PowerGel", "PowerBar", 49.99, "41 g gel", 25, "https://www.cyclelab.com/powerbar-powergel-mango",
    "PowerBar PowerGel Hydro", "PowerBar", 73.00, "67 ml gel", 25, "https://www.archcycles.co.za/products/powerbar-powergel-hydro-cola-67ml",
    "PowerBar RaceFuel", "PowerBar", 44.99, "55 g bar", 37, "https://finishlinecycles.co.za/products/powerbar-energize-55g",
    "PowerBar IsoActive Sports Drink (Orange 600g)", "PowerBar", 599.00, "600 g tub", 544, "https://kragkroeg.co.za/products/performance-energy/isoactive-jar-lemon-600gx18/", # 33 g in 500 ml provides ~29 g carbs:contentReference[oaicite:4]{index=4}

    # USN
    "USN Vooma Ultra Gel", "USN", 21.99, "36 g gel", 25, "https://www.dischem.co.za/usn-vooma-ultra-energy-gel-36g",
    "USN IsoGel", "USN", 24.90, "60 g gel", 40, "https://za.usn.global/products/cramp-block-iso-gel",


    # NAMEDSport
    "NAMEDSport Total Energy Fruit Bar", "NAMEDSport", 39.90, "35 g bar", 23, "https://solomonscycles.co.za/product/named-sport-total-energy-fruit-bar-assorted-35g/",
    "NAMEDSport RaceFuel Gel", "NAMEDSport", 60.00, "60 ml gel", 40, "", # (source link not provided)
    "NAMEDSport Isotonic Gel", "NAMEDSport", 55.00, "60 ml gel", 22, "https://xciter.co.za/products/isotonic-power-gel-singles?variant=48451031826616...",
    # NAMEDSport HydraFit (400 g tub, 15 g carbs per 20 g → 0.75 g/g → 300 g total)
    "NAMEDSport HydraFit (400g tub)", "NAMEDSport", 299.99, "400 g tub", 300,
    "https://www.cyclelab.com/product/4002776-tub-named-hydrafit-400g",

    # 226ERS
    "226ERS High Energy Gel", "226ERS", 95.99, "76 g gel", 50, "https://226ers.co.za/products/high-energy-gel-76g-energy-gel",
    "226ERS High Fructose Gel", "226ERS", 92.99, "80 g gel", 55, "https://226ers.co.za/products/high-fructose-gel-energy-gel-80g",
    "226ERS High Fructose Energy Drink (Monodose)", "226ERS", 100.00, "90 g sachet", 87, "https://finishlinecycles.co.za/products/226ers-high-fructose-energy-drink-monodosis", # Single 90 g sachet, 87 g carbs:contentReference[oaicite:6]{index=6}

    # STYRKR
    "STYRKR GEL30", "STYRKR", 85.00, "45 g gel", 30, "https://vivovitasport.com/product-category/styrkr/",
    "STYRKR GEL50", "STYRKR", 95.00, "60 g gel", 50, "https://vivovitasport.com/product-category/styrkr/",
    "STYRKR BAR50", "STYRKR", 85.00, "65 g bar", 50, "https://vivovitasport.com/product-category/styrkr/",

    # AMACx
    "AMACx Turbo Gel", "AMACx", 60.00, "60 ml gel", 40, "https://gearchange.co.za/products/nutrition-amacx-turbo-gel",

    # SiS
    "SiS GO Isotonic Energy Gel", "SiS", 44.00, "60 ml gel", 22, "https://scienceinsport.co.za/go-isotonic-energy-gel-60ml-single-unit-pineapple",
    "SiS GO Energy + Electrolyte Gel", "SiS", 59.00, "60 ml gel", 22, "https://scienceinsport.co.za/sis-go-energy-electrolyte-gel-60ml-single-unit-lemon-mint",
    "SiS GO Energy + Caffeine Gel (75 mg)", "SiS", 67.00, "60 ml gel", 22, "https://scienceinsport.co.za/caffeine-gels",
    "SiS Beta Fuel Dual‑Source Energy Gel", "SiS", 74.00, "60 ml gel", 40, "https://scienceinsport.co.za/nutrition-energy-beta-fuel-beta-fuel-60ml-single-unit-orange",
    "SiS Beta Fuel + Nootropics Gel", "SiS", 80.00, "60 ml gel", 40, "https://scienceinsport.co.za/sis-nutrition-energy-beta-fuel-60ml-nootropics-gel-single-unit-lemon-lime",
    "SiS Beta Fuel Dual‑Source Drink Mix (82g)", "SiS", 90.00, "82 g sachet", 80, "https://www.thebicycleservicecompany.co.za/bsc-online/nutrition/sis-beta-fuel-powder-sachet-80g/", # 82 g sachet provides ~80 g carbs:contentReference[oaicite:7]{index=7}:contentReference[oaicite:8]{index=8}

    # GU Energy
    "GU Energy Gel (32 g sachet)", "GU", 37.99, "32 g gel", 22, "https://www.dischem.co.za/gu-energy-gel-112", # R37.99:contentReference[oaicite:9]{index=9}
    "GU Roctane Energy Gel (32 g)", "GU", 61.99, "32 g gel", 22, "https://www.dischem.co.za/gu-roctane-energy-gel-32g", # R61.99:contentReference[oaicite:10]{index=10}

    # PVM
    "PVM Energy Bar", "PVM", 20.00, "45 g bar", 26, "https://pvm.co.za/shop/",
    "PVM Octane Gel (Caffeine / Uncaffeinated)", "PVM", 35.00, "35 g gel", 22.3, "https://pvm.co.za/product/octane-gel/?attribute_single-or-box-of-20-gels=Single&attribute_pa_flavour=chocolate-100mg-caffeine#nutritional",

    # Precision Fuel (via Carbon Endurance)
    "Precision Fuel 30g Gel", "Precision Fuel", 62.00, "30 g gel", 30, "https://www.carbonendurance.co/precision-hydration-3",
    "Precision Fuel 30g Caffeinated Gel", "Precision Fuel", 72.00, "30 g gel", 30, "https://www.carbonendurance.co/precision-hydration-3",
    "Precision Fuel 90g Gel Pouch", "Precision Fuel", 159.00, "90 g gel pouch", 90, "https://www.carbonendurance.co/precision-hydration-3",
    # "Fuel 300 Flow Gel (pouch)",         "Precision Fuel", 549.00, "300 g pouch",    300, "https://www.carbonendurance.co/precision-hydration-3",

    # 32GI
    "32Gi Sports Gel (27 g single)", "32Gi", 28.00, "27 g gel", 21, "https://www.thesweatshop.co.za/products/32gi-sports-gel-27g",
    "32Gi Race Pro 300 Gel", "32Gi", 99.99, "100 g gel", 67, "https://32gi.co.za/products/race-pro-300-calorie-energy-gel",
    "32Gi Race Pro Energy Bar (25 g)", "32Gi", 16.95, "25 g bar", 19, "https://www.thesweatshop.co.za/products/32gi-race-pro-bar-25g",
    "32Gi Endure Sports Drink (50 g sachet)", "32Gi", 44.99, "50 g sachet", 44, "https://www.cyclelab.com/product/4011694-suppl-32gi-endure-drink-sachet-orange-50g", # 50 g sachet ~44 g carbs:contentReference[oaicite:11]{index=11}:contentReference[oaicite:12]{index=12}


    # Hammer Nutrition
    "Hammer Gel Single (33 g)", "Hammer Nutrition", 40.00, "33 g gel", 21, "https://durbanrunner.co.za/products/hammer-gel-chocolate-single",
    "Hammer Gel 26‑serving Jug (33 g/serving)", "Hammer Nutrition", 580.00 / 26, "33 g gel", 21, "https://durbanrunner.co.za/collections/hammer",

    # SiSu Nutrition
    "SiSu 2Hr Fuel Cell (120 g pouch)", "SiSu Nutrition", 60.00, "120 g gel", 75, "https://sisunutrition.co.za/?product=sisu-2hr-fuel-cell-120-g",
    "SiSu Endurance Fuel (1kg tub)", "SiSu Nutrition", 270.00, "1 kg tub", 920,
    "https://sisunutrition.co.za/?product=sisu-endurance-fuel-1kg",


    # 32Gi Race High Intensity Sports Drink (900 g tub, 68 g per 75 g → ~0.907 g/g → ~816 g total)
    "32Gi Race High Intensity Drink (900g tub)", "32Gi", 432.99, "900 g tub", 816,
    "https://dischemlivingfit.co.za/shop/32gi-race-high-intensity-sports-drink-900g/",


    # Biogen
    "Biogen Pure Carbs Unflavoured (1kg tub)", "Biogen", 184.99, "1 kg tub", 1000,
    "https://dischemlivingfit.co.za/shop/biogen-pure-carbs-fast-absorbing-maltodextrin-1kg/",
    "Biogen CarboGen (1kg tub)", "Biogen", 209.99, "1 kg tub", 1000, "https://www.biogen.co.za/product/carbogen-1kg/",
    "Biogen CytoGen (1kg tub)", "Biogen", 229.99, "1 kg tub", 1000, "https://www.biogen.co.za/product/cytogen-1kg/",

    # USN
    "USN Winners Energy Sports Hydration Drink (500g tub)", "USN", 99.99, "500 g tub", 444,
    "https://dischemlivingfit.co.za/shop/usn-winners-energy-sports-hydration-drink-500g/",
    "USN CytoPower (1kg tub)", "USN", 349.99, "1 kg tub", 1000, "https://za.usn.global/collections/carbohydrates/products/usn-cytopower-1000g",
    "USN CarboPro (500g tub)", "USN", 199.99, "500 g tub", 500, "https://za.usn.global/collections/carbohydrates/products/usn-carbopro-500g",

    # 226ERS (1 kg tub, 87 g per 50 g → 1740 g total)
    "226ERS High Fructose Energy Drink (1kg tub)", "226ERS", 930.00, "1 kg tub", 965,
    "https://specializedpaarl.com/collections/226ers",

    # Groceries – ready-to-drink
    "Red Bull Energy Drink (250 ml can)", "Groceries", 19.99, "250 ml can", 27,
    "https://www.fatsecret.co.za/calories-nutrition/search?q=Red+Bull+Energy+Drink", # 27 g carbs per can ([fatsecret.com](https://www.fatsecret.com/Diary.aspx?pa=fjrd&rid=2063302&utm_source=chatgpt.com))
    "Monster Energy Drink (500 ml can)", "Groceries", 24.99, "500 ml can", 54,
    "https://www.fatsecret.co.za/calories-nutrition/search?q=Monster+Energy+Drink", # ~27 g per 250 ml → 54 g per 500 ml ([fatsecret.com](https://www.fatsecret.com/calories-nutrition/generic/energy-drink?portionamount=250.000&portionid=1136973&utm_source=chatgpt.com))
    "Coca-Cola Classic (330 ml can)", "Groceries", 7.50, "330 ml can", 35,
    "https://www.pnp.co.za/pnpstorefront/pnp/en/pp-red-drinks-400987",
       "Energade Sports Drink Mix (500g tub)",        "Groceries", 150.00, "500 g tub", 318,  "https://nutripro.co.za/product/energade-sports-drink-mix",
    "Powerade Sports Drink Mix (400g tub)",        "Groceries", 120.00, "400 g tub", 242,  "https://nutripro.co.za/product/powerade-sports-drink-mix",

    # Everyday South African Foods
    "Albany White Bread (2 slices @ R20 for 20 slices)", "Groceries", 2.00, "80 g", 35, "https://www.albany.co.za/Products/everyday-bread/Everyday-White-Bread",
    "Woolworths Bananas (1 banana from pack of 6 @ R32)", "Groceries", 5.33, "40 g", 31, "https://www.fatsecret.co.za/calories-nutrition/search?q=Banana",
    "Huletts White Sugar (50g @ R50 for 500g)", "Groceries", 4.99, "50 g granules", 50, "https://www.fatsecret.co.za/calories-nutrition/search?q=Huletts+White+Sugar",
    "Kellogg's Corn Flakes (50g @ R50 for 500g)", "Groceries", 5.00, "50 g", 42, "https://www.pnp.co.za/kellogg-s-corn-flakes-500g"
)


# View or use the table in R
all_products %>% glimpse()
all_products %>%
    mutate(
        rand_per_gram = Price_ZAR / Carbs_per_Serving,
        gel = if_else(grepl("gel", Serving_Size), 1, 0)
    ) ->
all_products

# create the average grams

lm(
    rand_per_gram ~ Brand,
    data = all_products
) -> model_rand_per_gram

model_rand_per_gram$coefficients["(Intercept)"] -> intercept # this is the average rand per gram for all products

# I want to visualise how the rand/g average changes as it goes from 0-3 and also visalise the confidence intervals changing, consider loess.

library(ggplot2)
all_products %>%
    ggplot(aes(x = Carbs_per_Serving, y = Price_ZAR)) +
    geom_point(
        aes(color = factor(Brand)),
    ) +
    geom_smooth(method = "lm", se = TRUE, color = "blue") # Rands per gram 
```


```{r}
#| include: false
library(plotly)
# Prepare data
all_products <- all_products %>%
    mutate(
        rand_per_gram = Price_ZAR / Carbs_per_Serving,
        gel = if_else(grepl("gel", tolower(Serving_Size)), 1, 0),
        is_grocery = if_else(Brand == "Groceries", TRUE, FALSE),
        label = paste0(
            "Brand: ", Brand, "<br>",
            "Product: ", Product, "<br>",
            "Serving: ", Serving_Size, "<br>",
            "Price: R", Price_ZAR, "<br>",
            "Carbs: ", Carbs_per_Serving, " g<br>",
            "R/g: ", round(rand_per_gram, 2)
        )
    )

all_products %>% glimpse()

# Create sorted values for model prediction
x_vals <- sort(all_products$Carbs_per_Serving)
model <- lm(Price_ZAR ~ Carbs_per_Serving, data = all_products %>% filter(Brand != "Groceries"))
preds <- predict(model, newdata = data.frame(Carbs_per_Serving = x_vals), interval = "confidence")
fit <- preds[, "fit"]
lwr <- preds[, "lwr"]
upr <- preds[, "upr"]

# Plotly plot with points, regression line, and confidence interval
plot_ly(data = all_products) %>%
    add_trace(
        x = x_vals,
        y = fit,
        type = "scatter",
        mode = "lines",
        line = list(color = "blue"),
        name = "Linear Fit"
    ) %>%
    add_trace(
        x = c(x_vals, rev(x_vals)),
        y = c(lwr, rev(upr)),
        type = "scatter",
        mode = "lines",
        fill = "toself",
        fillcolor = "rgba(0,0,255,0.2)",
        line = list(color = "rgba(255,255,255,0)"),
        name = "95% CI",
        showlegend = TRUE
    ) %>%
    add_trace(
        x = ~Carbs_per_Serving,
        y = ~Price_ZAR,
        type = "scatter",
        mode = "markers",
        color = ~Brand,
        text = ~label,
        hoverinfo = "text",
        name = "Products"
    ) %>%
    plotly::layout(
        title = "Rand vs Carbs per Serving (Interactive)",
        xaxis = list(title = "Carbs per Serving (g)"),
        yaxis = list(title = "Price (ZAR)"),
        hoverlabel = list(align = "left")
    )

```



```{r}
#| tbl: tbl-all_products
#| warning: false

# scrollable datatable of the products and brands

all_products %>%
    select(Brand, Product, rand_per_gram, Carbs_per_Serving, Price_ZAR, Serving_Size, , Source_Link) %>%
    arrange(desc(rand_per_gram), Brand) %>%
    DT::datatable(
        options = list(
            pageLength = 10,
            scrollX = TRUE,
            autoWidth = TRUE,
            columnDefs = list(list(className = "dt-center", targets = "_all"))
        ),
        rownames = FALSE
    ) %>%
    DT::formatCurrency("Price_ZAR", currency = "R", interval = 3, mark = ",") %>%
    DT::formatRound("rand_per_gram", digits = 2)

```


```{r}
#| include: false
# plot this in a simpler way

# rather make it dots or jitters on a single vertical axis. Show those above and below the average rand per gram line. Also highlight the "normal groceris"

library(ggplot2)
library(dplyr)

# Tag groceries


avg <- mean(all_products$rand_per_gram, na.rm = TRUE)

# Simple vertical jitter plot
ggplot(all_products, aes(x = 1, y = rand_per_gram)) +
    geom_jitter(aes(color = Brand), width = 0.2, size = 2) +
    geom_hline(yintercept = avg, color = "blue", linetype = "dashed") +
    scale_color_manual(values = c("FALSE" = "grey40", "TRUE" = "red")) +
    labs(
        title = "Rand per Gram of Carbohydrate",
        x = NULL,
        y = "Rand per Gram",
        color = "Grocery"
    ) +
    theme_minimal() +
    theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())



```


```{r}
#| include: false
# Add hover labels
# Process data
library(plotly)
library(dplyr)

set.seed(42) # for reproducibility

# Prepare data
library(plotly)
library(dplyr)
conflicts_prefer(plotly::layout)
# Jitter function for categorical x
jitter_x <- function(x, amount = 0.18) {
    as.numeric(x) + runif(length(x), -amount, amount)
}

# Assign product_type and labels
all_products <- all_products %>%
    mutate(
        rand_per_gram = round(Price_ZAR / Carbs_per_Serving, 2),
        is_grocery = Brand %in% "Groceries",
        product_type = factor(
            case_when(
                grepl("gel", tolower(Serving_Size)) ~ "Gel",
                grepl("bar", tolower(Serving_Size)) ~ "Bar",
                grepl("drink|mix|pouch|powder|tub|sachet|pack", tolower(Serving_Size)) ~ "Drink",
                is_grocery ~ "Grocery",
                TRUE ~ "Other"
            ),
            levels = c("Gel", "Bar", "Drink", "Grocery", "Other")
        ),
        label = paste0(
            "<b>", Product, "</b><br>",
            "Brand: ", Brand, "<br>",
            "Type: ", product_type, "<br>",
            "Price: R", round(Price_ZAR, 2), "<br>",
            "Carbs: ", Carbs_per_Serving, " g<br>",
            "R/g: <b>", rand_per_gram, "</b>"
        )
    )

# Calculate average R/g for non-groceries
non_grocery_avg <- mean(all_products$rand_per_gram[!all_products$is_grocery], na.rm = TRUE)




# Flag "good buy" or "expensive"
all_products <- all_products %>%
    mutate(
        value_flag = case_when(
            rand_per_gram <= non_grocery_avg * 0.85 ~ "Excellent Value",
            rand_per_gram >= non_grocery_avg * 1.15 ~ "Overpriced",
            TRUE ~ "Fair"
        )
    )

all_products %>%
    group_by(product_type) %>%
    mutate(
        average_product_type_rpg = mean(rand_per_gram, na.rm = TRUE),
        sd_product_type_rpg = sd(rand_per_gram, na.rm = TRUE),
        upper_ci_rpg = average_product_type_rpg + 1.96 * sd_product_type_rpg / sqrt(n()),
        lower_ci_rpg = average_product_type_rpg - 1.96 * sd_product_type_rpg / sqrt(n()),
        #upper_price = average_product_type_price * 1.15,
        #lower_price = average_product_type_price * 0.85,
        value_flag = case_when(
            rand_per_gram <= lower_ci_rpg ~ "Excellent Value",
            rand_per_gram >= upper_ci_rpg ~ "Overpriced",
            TRUE ~ "Fair"
        )
    ) -> all_products
# Calculate average rand_per_gram for each product_type
type_avg <- all_products %>%
    group_by(product_type) %>%
    summarise(
        avg_rpg = mean(rand_per_gram, na.rm = TRUE),
        .groups = "drop"
    )

# Assign jittered x for each product_type
all_products <- all_products %>%
    mutate(
        x_jitter = jitter_x(product_type, amount = 0.18)
    )


# 3. Identify the four annotation points
exp_gel <- all_products %>%
    filter(product_type == "Gel") %>%
    slice_max(rand_per_gram, n = 1)
best_bar <- all_products %>%
    filter(product_type == "Bar") %>%
    slice_min(rand_per_gram, n = 1)
# “Medium drink”: closest to the drink‐mean
drink_mean <- all_products %>%
    filter(product_type == "Drink") %>%
    summarise(m = mean(rand_per_gram, na.rm = TRUE)) %>%
    pull(m)
med_drink <- all_products %>%
    filter(product_type == "Drink") %>%
    slice_min(abs(rand_per_gram - drink_mean), n = 1)
cola <- all_products %>%
    filter(grepl("coca", tolower(Product)) | grepl("coke", tolower(Brand))) %>%
    slice(1)

annots <- bind_rows(exp_gel, best_bar, med_drink, cola) %>%
    mutate(
        ann_label = paste0(Product, "\nR/g=", rand_per_gram)
    )

shape_map <- c(
    Gel     = "\U0001F9F4", # 🧴 lotion-bottle → sports gel
    Bar     = "\U0001F36B", # 🍫 chocolate bar
    Drink   = "\U0001F964", # 🥤 cup with straw → sports drink
    Grocery = "\U0001F6D2" # 🛒 shopping cart
)


all_products%>%
    mutate(
        product_type = factor(product_type, levels = names(shape_map)),
        shape = shape_map[as.character(product_type)]
    ) %>%
    mutate(
        value_flag = factor(value_flag, levels = c("Excellent Value", "Fair", "Overpriced"))
    ) 

# Plotly faceted by product_type, show points and average line per facet
plot_ly() %>%
    add_trace(
        data = all_products,
        type = "scatter",
        mode = "markers",
        x = ~x_jitter,
        y = ~rand_per_gram,
        color = ~value_flag,
        colors = c("Excellent Value" = "green", "Fair" = "orange", "Overpriced" = "red"),
        text = ~label,
        hoverinfo = "text",
        marker = list(size = 10, opacity = 0.85, line = list(width = 1, color = "black")),
        # name = "Product",
        showlegend = TRUE
    ) %>%
    add_trace(
        data = type_avg,
        type = "scatter",
        mode = "lines",
        x = ~ as.numeric(product_type),
        y = ~avg_rpg,
        line = list(color = "blue", dash = "dash"),
        name = "Avg R/g (Type)",
        showlegend = TRUE,
        inherit = FALSE
    ) %>%
    plotly::layout(
        title = "Rand per Gram of Carbohydrate by Product Type",
        xaxis = list(
            title = "Product Type",
            tickvals = 1:length(levels(all_products$product_type)),
            ticktext = levels(all_products$product_type),
            categoryorder = "array",
            categoryarray = levels(all_products$product_type)
        ),
        yaxis = list(title = "Rand per Gram"),
        hoverlabel = list(bgcolor = "white", font = list(size = 12)),
        legend = list(title = list(text = "<b>Value</b>")),
        updatemenus = list(
            list(
                type = "buttons",
                direction = "right",
                x = 1, y = 1.15,
                buttons = list(
                    list(
                        method = "relayout",
                        args = list("xaxis.range", NULL),
                        label = "Reset Zoom"
                    )
                )
            )
        )
    ) 
    

```

```{r}
# plotly ver 2

# Apply emoji labels to x-axis
emoji_labels <- shape_map[levels(all_products$product_type)]
names(emoji_labels) <- levels(all_products$product_type)


all_products %>%
    mutate(
        product_emoji_label = paste0(
            product_type, " ", shape_map[as.character(product_type)]
        )
    ) -> all_products

product_emoji_label <- all_products$product_emoji_label%>%unique

# Final plot
plot_ly() %>%
    add_trace(
        data = all_products,
        type = "scatter",
        mode = "markers",
        x = ~x_jitter,
        y = ~rand_per_gram,
        color = ~value_flag,
        colors = c("Excellent Value" = "green", "Fair" = "orange", "Overpriced" = "red"),
        text = ~label,
        hoverinfo = "text",
        marker = list(size = 10, opacity = 0.85, line = list(width = 1, color = "black")),
        showlegend = TRUE
    ) %>%
    # Average line per product_type
    add_trace(
        data = type_avg,
        type = "scatter",
        mode = "lines",
        x = ~ as.numeric(product_type),
        y = ~avg_rpg,
        line = list(color = "blue", dash = "dash"),
        name = "Avg R/g (Type)",
        inherit = FALSE,
        showlegend = TRUE
    ) %>%
    # Add annotations
    add_trace(
        data = annots,
        type = "scatter",
        mode = "text",
        x = ~x_jitter,
        y = ~ rand_per_gram + 0.2, # nudged upward
        text = ~ann_label,
        textposition = "top center",
        textfont = list(size = 12, color = "black"),
        showlegend = FALSE,
        inherit = FALSE
    ) %>%
    layout(
        title = list(
            text = "💰 Rand per Gram of Carbohydrate by Product Type",
            x = 0.5,
            font = list(size = 20, family = "Arial")
        ),
        xaxis = list(
            title = list(
                text = "Product type",#"Product Type 🧴 🍫 🥤 🛒",
                font = list(size = 14)
            ),
            tickvals = 1:length(product_emoji_label),
            ticktext =  product_emoji_label, 
            categoryorder = "array",
            categoryarray = names(product_emoji_label)
        ),
        yaxis = list(
            title = list(text = "Rand per Gram", font = list(size = 14)),
            rangemode = "tozero"
        ),
        hoverlabel = list(bgcolor = "white", font = list(size = 12)),
        legend = list(
            title = list(text = "<b>Value</b>"),
            orientation = "h",
            x = 0.5, xanchor = "center", y = -0.2
        ),
        updatemenus = list(
            list(
                type = "buttons",
                direction = "right",
                x = 1, y = 1.15,
                buttons = list(
                    list(
                        method = "relayout",
                        args = list("xaxis.range", NULL),
                        label = "Reset Zoom"
                    )
                )
            )
        ),
        margin = list(l = 60, r = 30, t = 80, b = 100)
    )

```



```{r}
# how much money would you spend on 300g of carbs (say a sub-3 cycle tour)

all_products %>%
    ungroup() %>%
    mutate(
        sub_3_ct_cost = round((300 / Carbs_per_Serving) * Price_ZAR, 0),
    ) %>%
    select(Brand, Product, sub_3_ct_cost) %>%
    arrange(sub_3_ct_cost) %>%
    mutate(
        Product = factor(Product, levels = unique(Product))
    ) ->
all_products_sub_3_ct

all_products_sub_3_ct %>%
    group_by(Brand) %>%
    summarise(
        sub_3_ct_cost = mean(sub_3_ct_cost, na.rm = TRUE),
        .groups = "drop"
    ) ->
sub_3_ct_cost_by_brand

sub_3_ct_cost_by_brand %>% arrange(-sub_3_ct_cost) -> brand_order

all_products_sub_3_ct %>%
    mutate(
        Brand = factor(Brand, levels = rev(brand_order$Brand)),
        Product = factor(Product, levels = unique(all_products_sub_3_ct$Product))
    ) -> all_products_sub_3_ct

brand_colors <- c(
    "GU"               = "#800026",
    "STYRKR"           = "#BD0026",
    "SiS"              = "#E31A1C",
    "Precision Fuel"   = "#FC4E2A",
    "Maurten"          = "#FD8D3C",
    "PowerBar"         = "#FEB24C",
    "NAMEDSport"       = "#FED976",
    "AMACx"            = "#FFEDA0",
    "Hammer Nutrition" = "#CCEBC5",
    "226ERS"           = "#A1D99B",
    "Cadence"          = "#74C476",
    "PVM"              = "#41AB5D",
    "32Gi"             = "#238B45",
    "Biogen"           = "#006D2C",
    "SiSu Nutrition"   = "#08519C",
    "USN"              = "#3182BD",
    "Groceries"        = "#6BAED6"
)

all_products_sub_3_ct %>%
    ggplot(aes(x = Product, y = sub_3_ct_cost, fill = Brand)) +
    geom_bar(
        stat = "identity",
        position = "dodge",
        width = 0.7
    ) +
    scale_y_continuous(
        breaks = seq(0, 1200, 50),
    ) +
    scale_fill_manual(values = brand_colors) +
    theme(
        axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "bottom",
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()
    ) +
    # coord_flip()
    facet_nested(
        cols = vars(Brand),
        scales = "free_x",
        space = "free_x"
    ) +
    theme_minimal(base_size = 14) ->
plot_sub_3_ct_cost

# CHATGPT

library(dplyr)
library(ggplot2)
library(ggh4x) # for facet_nested
library(scales) # for comma formatting
library(plotly)

# 1) Compute the cost per 300g carbs and order levels
all_products_sub_3_ct <- all_products %>%
    ungroup() %>%
    mutate(
        sub_3_ct_cost = round((300 / Carbs_per_Serving) * Price_ZAR)
    ) %>%
    select(Brand, Product, sub_3_ct_cost) %>%
    arrange(sub_3_ct_cost) %>%
    mutate(
        Product = factor(Product, levels = unique(Product))
    )

# 2) Compute mean cost by brand to set brand ordering
brand_order <- all_products_sub_3_ct %>%
    group_by(Brand) %>%
    summarise(sub_3_ct_cost = mean(sub_3_ct_cost), .groups = "drop") %>%
    arrange(sub_3_ct_cost)

# 3) Re‐factor Brand so facets appear in ascending cost order
all_products_sub_3_ct <- all_products_sub_3_ct %>%
    mutate(
        Brand = factor(Brand, levels = brand_order$Brand)
    )

# 4) Define a cohesive palette (you can substitute for a ColorBrewer or viridis palette)
brand_colors <- c(
    "GU" = "#800026", "STYRKR" = "#BD0026", "SiS" = "#E31A1C",
    "Precision Fuel" = "#FC4E2A", "Maurten" = "#FD8D3C", "PowerBar" = "#FEB24C",
    "NAMEDSport" = "#FED976", "AMACx" = "#FFEDA0", "Hammer Nutrition" = "#CCEBC5",
    "226ERS" = "#A1D99B", "Cadence" = "#74C476", "PVM" = "#41AB5D",
    "32Gi" = "#238B45", "Biogen" = "#006D2C", "SiSu Nutrition" = "#08519C",
    "USN" = "#3182BD", "Groceries" = "#6BAED6"
)



# Plotlyt gpt

library(ggplot2)
library(plotly)
library(dplyr)
library(scales)
library(forcats)

# Sort by cost
all_products_sub_3_ct <- all_products %>%
    ungroup() %>%
    mutate(
        sub_3_ct_cost = round((300 / Carbs_per_Serving) * Price_ZAR)
    ) %>%
    select(Brand, Product, sub_3_ct_cost) %>%
    arrange(desc(sub_3_ct_cost)) %>%
    mutate(
        Product = fct_reorder(Product, sub_3_ct_cost)
    )

# Plot
p <- ggplot(all_products_sub_3_ct, aes(
    x = sub_3_ct_cost,
    y = Product,
    fill = Brand,
    text = paste0(
        "<b>", Product, "</b><br>",
        "Brand: ", Brand, "<br>",
        "Cost per 300g CHO: R", sub_3_ct_cost
    )
)) +
    geom_col(width = 0.7) +
    scale_x_continuous(
        labels = comma,
        expand = expansion(mult = c(0, 0.05))
    ) +
    scale_fill_manual(values = brand_colors) +
    labs(
        title = "Cost of 300g Carbohydrates per Product",
        x = "Cost (ZAR)", y = NULL, fill = "Brand"
    ) +
    theme_minimal(base_size = 14) +
    theme(
        axis.text.y = element_text(size = 10),
        legend.position = "bottom",
        plot.title = element_text(face = "bold", size = 16)
    )

# Interactive version
ggplotly(p, tooltip = "text") %>%
    layout(
        margin = list(l = 120, r = 20, t = 80, b = 50),
        updatemenus = list(
            list(
                type = "buttons",
                direction = "right",
                x = 1, y = 1.1,
                buttons = list(
                    list(method = "relayout", args = list("xaxis.autorange", TRUE), label = "Reset Zoom")
                )
            )
        )
    )


```


# Limitations
Prices, stock, specials and discount codes may influence prices here. Carbohydrate composition (glucose:fructose ratio), and sodium content of the products are not considered. The carbohydrate content of the products is based on the manufacturer's claims, and may not be accurate. The actual vs claimed carbohydrate is not measured, nor is the amount of residual product that is left in the product packaging accounted for. We also did not account for the ease of use of the product such gel-opening failure rates, or how long a drink mix may take to dissolve. We also did not measure how long it may take to consume x amount of carbohydrate for each product. 

# Conclusion 
Assuming all other things equal, the rand per gram may be a simple was to guide purchasing decisions. Gel products are the most expensive, followed by bars and drink mixes. 

# Practical Applications
High value gel products should not cost more than double the rands for the amount of carbohydrate they contain. For instance, a gel that contains 30g of carbohydrate should not cost more than R60. 

High value drink mix products should contain double the amount of carbohydrate per rand spent. For instance, a drink mix tub that contains 800g of carbohydrate should not cost more than R400.

# Not medical advice but food for thought

There is evidence to suggest that oxidation rates of gels, bars and drinks mixes do not differ when matched with liquid consumption [@jeukendrup2014StepPersonalizedSports; @pfeiffer2010CHOOxidationCHO; @pfeiffer2010OxidationSolidLiquid] and therefore the the product type should be chosen based on personal preference, such as convenience or taste, instead of for "performance" reasons. 

Products may market natural flavoring or high quality ingredients as reasons that they are better than other products, but there is evidence to suggest that the body does not actually know the difference between food sources marketed as sports food and those that are not [@cramer2015PostexerciseGlycogenRecovery; @flynn2020MalesFemalesExhibit; @jeukendrup2014StepPersonalizedSports; @trommelen2017FructoseSucroseIntake].

Anecdotally from this exercise, we noticed that isotonic or high sodium products (like GU Roctane, or "hydrogel" products) are much more expensive than their "normal" counterparts with the main difference being sodium content. Sodium exists in table salt and is cheap to supplement into your drink mixes based on your own needs. 

Since glucose transport is saturated at 60g/hr based on the maximal transport from SGLT1, fructose is the carbohydrate type that can be increased based on increasing needs (intensity or duration) [@jeukendrup2014StepPersonalizedSports]. Fructose is cheap and relatively available at pharmacies or large grocery stores. It can be supplemented into existing drink mixes based on the intensity. The more intense, the more fructose to add. For instance a 90g CHO serving from a product marketed as a 2:1 ratio can have an additional 30g fructose added for a 120g CHO serving without saturating the SGLT1 transporter.


*Note: This analysis is for informational purposes only and should not be considered medical or nutritional advice. Always consult with qualified healthcare professionals before making significant changes to your nutrition or supplementation strategy.*


