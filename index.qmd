---
title: ""
format: html
css: styles.css
---

<!-- Hero Section -->

::::: {.hero style="
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    background-color: #121212;
    color: #fff;
    text-align: center;
    padding: 2rem;
"}
<!-- Logo --> <img src="logo/StudyStats_Logo Files/CMYK/second_logo_portrait/White/white.png" alt="StudyStats Logo" style="max-width: 300px; margin-bottom: 1.5rem;"/>

<!-- Title and Tagline -->

<p style="font-size: 1.5rem; margin-bottom: 2rem;">

Expert statistical consulting for health professionals and researchers.

</p>

<!-- Navigation Links -->

<nav style="font-size: 1.2rem;">

<a href="index.qmd" style="margin: 0 1rem; color: #fff; text-decoration: none;">Home</a> <a href="about.qmd" style="margin: 0 1rem; color: #fff; text-decoration: none;">About</a> <a href="services.qmd" style="margin: 0 1rem; color: #fff; text-decoration: none;">Services</a> <a href="contact.qmd" style="margin: 0 1rem; color: #fff; text-decoration: none;">Contact</a>

</nav>

<!-- Date and Epiweek Display -->

::: {#current-date style="font-size: 1.5rem; margin-top: 2rem;"}
:::

<!-- Calendar Visualization -->

::: {#calendar style="margin-top: 2rem;"}
:::
:::::

```{=html}
<script>
document.addEventListener('DOMContentLoaded', function(){
  var now = new Date();
  // Get the full day name explicitly (e.g., "Monday") for the current date
  var dayName = now.toLocaleDateString('en-US', { weekday: 'long' });
  // Full formatted date without the weekday (e.g., "January 1, 2025")
  var fullDate = now.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
  
  // Function to calculate CDC epiweek details
  function getEpiWeek(date) {
    var year = date.getFullYear();
    var jan1 = new Date(year, 0, 1);
    var epiWeek1Start;
    // Determine epiweek 1: the week with at least 4 days in January.
    if (jan1.getDay() <= 3) {
      epiWeek1Start = new Date(jan1);
      epiWeek1Start.setDate(jan1.getDate() - jan1.getDay());
    } else {
      epiWeek1Start = new Date(jan1);
      epiWeek1Start.setDate(jan1.getDate() + (7 - jan1.getDay()));
    }
    
    // Get the Sunday of the current week.
    var currentSunday = new Date(date);
    currentSunday.setDate(date.getDate() - date.getDay());
    
    // Calculate epiweek number.
    var diffDays = Math.floor((currentSunday - epiWeek1Start) / (1000 * 60 * 60 * 24));
    var epiWeek = Math.floor(diffDays / 7) + 1;
    
    // Define the start (Sunday) and end (Saturday) dates of the current epiweek.
    var weekStart = new Date(currentSunday);
    var weekEnd = new Date(weekStart);
    weekEnd.setDate(weekStart.getDate() + 6);
    
    return { epiWeek: epiWeek, weekStart: weekStart, weekEnd: weekEnd };
  }
  
  var epiInfo = getEpiWeek(now);
  var epiWeek = epiInfo.epiWeek;
  
  // Format the start and end dates for display (e.g., "Jan 1")
  var weekStartStr = epiInfo.weekStart.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
  var weekEndStr = epiInfo.weekEnd.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
  // Get the full day names for the start and end of the epiweek
  var weekStartDay = epiInfo.weekStart.toLocaleDateString('en-US', { weekday: 'long' });
  var weekEndDay = epiInfo.weekEnd.toLocaleDateString('en-US', { weekday: 'long' });
  
  // Update the display with the current date and epiweek details.
  document.getElementById('current-date').innerHTML = 
    dayName + ", " + fullDate + 
    '<br><span style="font-size:0.9rem;">Epiweek ' + epiWeek + 
    ' (starts ' + weekStartDay + ', ' + weekStartStr + 
    ' and Ends ' + weekEndDay + ', ' + weekEndStr + ')</span>';
  
  // Utility: normalize a date by zeroing out time components.
  function normalizeDate(date) {
    return new Date(date.getFullYear(), date.getMonth(), date.getDate());
  }
  
  // Generate calendar for the current month
  function generateCalendar() {
    var year = now.getFullYear();
    var month = now.getMonth(); // current month (0-indexed)
    var firstDay = new Date(year, month, 1);
    var lastDay = new Date(year, month + 1, 0);
    var startDay = firstDay.getDay(); // day of week for the 1st
    var daysInMonth = lastDay.getDate();
    
    var html = '<table style="width: 100%; max-width: 400px; margin: 0 auto; border-collapse: collapse; background-color: #1f1f1f; color: #fff;">';
    // Header row for day names
    var dayNames = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];
    html += '<tr>';
    dayNames.forEach(function(day) {
      html += '<th style="padding: 8px; border: 1px solid #333;">' + day + '</th>';
    });
    html += '</tr>';
    
    var dateNum = 1;
    var totalRows = Math.ceil((startDay + daysInMonth) / 7);
    for (var i = 0; i < totalRows; i++) {
      html += '<tr>';
      for (var j = 0; j < 7; j++) {
        var cellContent = '';
        var cellDate = null;
        if (i === 0 && j < startDay) {
          cellContent = '';
        } else if (dateNum > daysInMonth) {
          cellContent = '';
        } else {
          cellContent = dateNum;
          cellDate = new Date(year, month, dateNum);
          dateNum++;
        }
        // Normalize dates to compare only the date parts.
        var normCellDate = cellDate ? normalizeDate(cellDate) : null;
        var normWeekStart = normalizeDate(epiInfo.weekStart);
        
        // Check if cellDate falls within the current epiweek range.
        var highlight = '';
        if (cellDate && cellDate >= epiInfo.weekStart && cellDate <= epiInfo.weekEnd) {
          // If this cell is the epiweek's starting Sunday, apply special highlight.
          if (normCellDate && normCellDate.getTime() === normWeekStart.getTime()) {
            highlight = 'background-color: white; color: black; border: 2px solid white; font-weight: bold;';
          } else {
            highlight = 'background-color: white; color: black;';
          }
        }
        html += '<td style="padding: 8px; border: 1px solid #333; text-align: center; ' + highlight + '">' + cellContent + '</td>';
      }
      html += '</tr>';
    }
    html += '</table>';
    document.getElementById('calendar').innerHTML = html;
  }
  
  // Generate and display the calendar.
  generateCalendar();
});
</script>
```